-- auto-generated definition
create extension vector
    schema public
    version '0.8.1';

comment on extension vector is 'vector data type and ivfflat and hnsw access methods';

-- CV Embeddings table for storing vector representations of CV documents
create table cv_embedding
(
    id         bigint generated by default as identity
        constraint cv_embedding_pk primary key,
    user_id    varchar(255) not null,
    cv_id      varchar(255) not null,
    provider   varchar(50)  not null,
    model      varchar(100) not null,
    embedding  vector(1536) not null, -- Adjusted for text-embedding-3-small (1536 dimensions)
    created_at timestamp default now() not null,
    updated_at timestamp default now() not null,

    constraint uk_cv_embedding_user_cv_provider_model
        unique (user_id, cv_id, provider, model)
);

-- Indexes for efficient vector similarity searches
-- HNSW index for cosine similarity (more efficient for high-dimensional vectors)
create index cv_embedding_embedding_cosine_idx 
    on cv_embedding using hnsw (embedding vector_cosine_ops);

-- Optional: IVFFlat index alternative (comment out if using HNSW above)
-- create index cv_embedding_embedding_ivf_idx 
--     on cv_embedding using ivfflat (embedding vector_cosine_ops) 
--     with (lists = 100);

-- Standard indexes for filtering
create index cv_embedding_user_id_idx on cv_embedding (user_id);
create index cv_embedding_cv_id_idx on cv_embedding (cv_id);
create index cv_embedding_provider_model_idx on cv_embedding (provider, model);
create index cv_embedding_created_at_idx on cv_embedding (created_at desc);

-- Table comments
comment on table cv_embedding is 'Stores vector embeddings for CV documents from various AI providers';
comment on column cv_embedding.provider is 'AI provider name (e.g., OPENAI, GOOGLE_GEMINI, OLLAMA)';
comment on column cv_embedding.model is 'Specific model used for embedding (e.g., text-embedding-3-small)';
comment on column cv_embedding.embedding is 'Vector representation of the CV content (1536 dimensions for OpenAI models)';
